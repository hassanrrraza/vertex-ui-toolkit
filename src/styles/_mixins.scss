// ==========================================
// === Mixins ===
// ==========================================

// Flex center (kept from original)
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Visually hidden (kept from original with enhancements)
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Media query mixins using the breakpoint variables
@mixin screen-sm {
  @media (min-width: $breakpoint-sm) { @content; }
}

@mixin screen-md {
  @media (min-width: $breakpoint-md) { @content; }
}

@mixin screen-lg {
  @media (min-width: $breakpoint-lg) { @content; }
}

@mixin screen-xl {
  @media (min-width: $breakpoint-xl) { @content; }
}

@mixin screen-2xl {
  @media (min-width: $breakpoint-2xl) { @content; }
}

// Container mixin for consistent max-width and padding
@mixin container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: $space-4;
  padding-right: $space-4;
  
  @include screen-sm {
    max-width: $container-sm;
  }
  
  @include screen-md {
    max-width: $container-md;
  }
  
  @include screen-lg {
    max-width: $container-lg;
  }
  
  @include screen-xl {
    max-width: $container-xl;
  }
  
  @include screen-2xl {
    max-width: $container-2xl;
  }
}

// Button base styles mixin
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: $font-weight-medium;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: 1px solid transparent;
  padding: $space-2 $space-4;
  font-size: $text-base;
  line-height: $leading-normal;
  border-radius: var(--radius-md);
  transition: var(--transition-default);
  cursor: pointer;
  
  &:disabled,
  &.disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  &:focus {
    outline: 0;
    box-shadow: 0 0 0 3px rgba($color-primary-500, 0.25);
  }
}

// Button variant mixin
@mixin button-variant($background, $color, $hover-background, $hover-color, $active-background, $active-color) {
  background-color: $background;
  color: $color;
  
  &:hover {
    background-color: $hover-background;
    color: $hover-color;
  }
  
  &:active {
    background-color: $active-background;
    color: $active-color;
  }
  
  &:focus {
    box-shadow: 0 0 0 3px rgba($background, 0.5);
  }
}

// Button size mixins
@mixin button-sm {
  padding: $space-1.5 $space-3;
  font-size: $text-sm;
  line-height: $leading-tight;
  border-radius: var(--radius-sm);
}

@mixin button-lg {
  padding: $space-3 $space-6;
  font-size: $text-lg;
  line-height: $leading-normal;
  border-radius: var(--radius-md);
}

// Form control mixin
@mixin form-control {
  display: block;
  width: 100%;
  padding: $space-2 $space-3;
  font-size: $text-base;
  line-height: $leading-normal;
  color: var(--color-text);
  background-color: var(--color-surface);
  background-clip: padding-box;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-md);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  
  &::placeholder {
    color: var(--color-text-muted);
    opacity: 1;
  }
  
  &:focus {
    border-color: var(--color-primary);
    outline: 0;
    box-shadow: 0 0 0 3px rgba($color-primary-500, 0.25);
  }
  
  &:disabled,
  &[readonly] {
    background-color: var(--color-surface-alt);
    opacity: 1;
  }
  
  &:disabled {
    cursor: not-allowed;
  }
}

// Card mixin
@mixin card($padding: $space-4) {
  background-color: var(--color-surface);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow);
  overflow: hidden;
  
  > :first-child {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  
  > :last-child {
    border-bottom-left-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
  }
  
  > * {
    padding: $padding;
  }
  
  > :not(:first-child) {
    border-top: 1px solid var(--color-border);
  }
}

// Text overflow mixin
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Line clamp mixin
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Clearfix mixin
@mixin clearfix {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

// Animation mixins
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin animation($animations...) {
  animation: $animations;
}

// Transition mixin
@mixin transition($properties...) {
  $result: ();
  
  @each $property in $properties {
    $result: append($result, $property $transition-default, comma);
  }
  
  transition: $result;
}

// Focus ring mixin
@mixin focus-ring($color: $color-primary-500, $offset: 2px) {
  outline: 0;
  box-shadow: 0 0 0 $offset rgba($color, 0.25);
}

// Scrollbar mixin
@mixin scrollbar($size: 8px, $thumb: $color-neutral-300, $track: $color-neutral-100) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }
  
  &::-webkit-scrollbar-track {
    background: $track;
    border-radius: $size / 2;
  }
  
  &::-webkit-scrollbar-thumb {
    background-color: $thumb;
    border-radius: $size / 2;
    
    &:hover {
      background-color: darken($thumb, 10%);
    }
  }
  
  // Firefox scrollbar
  scrollbar-width: thin;
  scrollbar-color: $thumb $track;
}

// Dark mode mixin
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// Print mixin
@mixin print {
  @media print {
    @content;
  }
}

// High contrast mode mixin
@mixin high-contrast-mode {
  @media (prefers-contrast: more) {
    @content;
  }
}

// Reduced motion mixin
@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// Hover mixin with fallback for devices that don't support hover
@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

// Aspect ratio mixin
@mixin aspect-ratio($width, $height) {
  position: relative;
  overflow: hidden;
  
  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-bottom: ($height / $width) * 100%;
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Truncate text to a single line with ellipsis
@mixin truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Clear list styles
@mixin list-unstyled {
  list-style: none;
  padding-left: 0;
  margin-top: 0;
  margin-bottom: 0;
}

// Hide scrollbar but keep functionality
@mixin hide-scrollbar {
  -ms-overflow-style: none;  // IE and Edge
  scrollbar-width: none;     // Firefox
  
  &::-webkit-scrollbar {
    display: none;  // Chrome, Safari and Opera
  }
}